import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import TFade from "components/Transition/Fade";

// services
import { updateProfile } from "services/User";
import { confirmModal, successModal } from "services/general";

// features
import { VerifyUser } from "features/authSlice";

// components
import Navbar from "components/Navbar";
import Footer from "components/Footer";

import InputText from "components/Form/InputText";
import InputFormat from "components/Form/InputFormat";
import Button from "components/Button";

// assets
import sleeping from "assets/images/sleeping.png";

const Profile = () => {
  const dispatch = useDispatch();
  const { user } = useSelector((state) => state.auth);
  const [name, setName] = useState("");

  useEffect(() => {
    if (user) setName(user.name);
  }, [user]);

  const submit = (e) => {
    e.preventDefault();

    confirmModal().then(async (result) => {
      if (result.isConfirmed) {
        try {
          await updateProfile({
            name: name,
          });

          getUser();
          successModal(
            "Success",
            "Data berhasil disimpan! <i class='text-en'>Data successfully saved</i>"
          );
        } catch (error) {
          console.error(error);
        }
      }
    });
  };

  const getUser = () => {
    dispatch(VerifyUser());
  };

  return (
    <TFade>
      <Navbar title="Profile" />

      <div className="rounded-[20px] bg-white p-3 md:p-6">
        {/* Background */}
        <div className="relative h-[225px] rounded-[15px] bg-cream">
          <img
            src={sleeping}
            alt="Sleeping"
            className="absolute bottom-0 left-0"
          />
        </div>

        {/* Avatar */}
        <img
          src={`${process.env.REACT_APP_STORAGE}avatars/${user?.avatar}`}
          alt="Avatar"
          className="relative z-[1] mx-auto -mt-16 h-[100px] w-[100px] rounded-full border-[4px] border-white bg-cream object-cover md:h-[120px] md:w-[120px]"
        />

        {/* Form */}
        <form onSubmit={submit} className="mt-5">
          <div className="grid grid-cols-1 gap-5 md:grid-cols-2">
            <InputText
              name="name"
              type="text"
              placeholder={
                <>
                  Nama Lengkap / <i>Full Name</i>
                </>
              }
              value={name}
              onChange={(e) => setName(e.target.value)}
              disabled={user?.role.name !== "Mahasiswa" ? false : true}
            />

            <InputText
              name="email"
              type="email"
              placeholder="Email"
              value={user?.email}
              disabled
            />

            {user?.role.name === "Mahasiswa" && (
              <>
                <InputText
                  name="phoneNumber"
                  type="number"
                  prepend="+62"
                  placeholder={
                    <>
                      Nomor Handphone / <i>Phone Number</i>
                    </>
                  }
                  value={user?.phone}
                  disabled
                />

                <InputFormat
                  name="npm"
                  placeholder={
                    <>
                      NPM / <i>Registration student number</i>
                    </>
                  }
                  template="xxxx - xx - xx - xx - xx"
                  value={user?.npm}
                  disabled
                />
              </>
            )}
          </div>

          {user?.role.name !== "Mahasiswa" && (
            <>
              <InputText
                name="phoneNumber"
                type="number"
                prepend="+62"
                placeholder={
                  <>
                    Nomor Handphone / <i>Phone Number</i>
                  </>
                }
                inputClassName="mt-5 w-full"
                value={user?.phone}
                disabled
              />

              <div className="mt-5 flex flex-wrap items-center justify-end gap-3 md:flex-nowrap">
                <Button
                  isDanger
                  className="flex w-full items-center justify-between gap-4 md:w-auto"
                  onClick={() => {
                    setName(user.name);
                  }}
                >
                  <span>
                    Batal <i className="text-en">Cancel</i>
                  </span>
                  <svg
                    width="16"
                    height="15"
                    viewBox="0 0 16 15"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M7.30143 8.98354C5.97626 10.1699 4.68036 11.319 3.39743 12.4825C2.6542 13.1565 1.93758 13.8597 1.19608 14.5355C0.998589 14.7201 0.771648 14.8702 0.524619 14.9795C0.402804 15.0306 0.139755 14.9795 0.0797655 14.8858C0.000392091 14.7615 0.0238596 14.5408 0.066913 14.3785C0.0982339 14.2601 0.225762 14.1622 0.321969 14.0671C2.15157 12.2657 3.98201 10.4654 5.81324 8.66629C6.01871 8.4645 6.23009 8.26886 6.46617 8.04478C5.66591 7.15787 4.8644 6.30205 4.09924 5.41442C2.87803 3.99712 1.68133 2.55873 0.474504 1.12916C0.430635 1.0772 0.392898 1.02034 0.34862 0.968381C0.137434 0.718732 -0.0114537 0.449655 0.229013 0.146825C0.409082 -0.0799151 0.839552 -0.0460497 1.13929 0.262406C1.88579 1.03038 2.61297 1.81695 3.33407 2.60957C4.65077 4.05602 5.95719 5.51188 7.2692 6.96262C7.32537 7.0154 7.38508 7.06422 7.44794 7.10877C8.46245 6.13912 9.46572 5.17263 10.4774 4.21443C11.6506 3.10374 12.828 1.99743 14.0095 0.895471C14.4527 0.481265 14.808 0.406606 15.08 0.648278C15.3619 0.898643 15.3357 1.31692 14.8862 1.76539C13.6709 2.97805 12.4262 4.16125 11.1828 5.34578C10.2355 6.24844 9.2731 7.13556 8.26492 8.07842C9.08415 8.92575 9.86771 9.77032 10.6892 10.5758C11.4782 11.3495 12.3114 12.0783 13.1159 12.8361C13.4305 13.1212 13.725 13.4278 13.9974 13.7536C14.2172 14.0269 14.2497 14.3663 13.9795 14.6359C13.7133 14.9018 13.4051 14.8078 13.1483 14.6065C12.6572 14.2415 12.1863 13.8498 11.738 13.4331C10.3655 12.0889 9.01716 10.7201 7.66005 9.3602C7.55273 9.25281 7.45018 9.14012 7.30143 8.98354Z"
                      fill="#FF5678"
                    />
                  </svg>
                </Button>

                <Button
                  isSecondary
                  type="submit"
                  className="flex w-full items-center justify-between gap-4 md:w-auto"
                >
                  Update Profile
                  <svg
                    width="25"
                    height="20"
                    viewBox="0 0 25 20"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M3.07982 17.9928C3.89693 18.5554 4.80949 18.9646 5.77302 19.2008C7.74963 19.6803 9.45639 19.9093 11.0712 19.9093C11.3544 19.9093 11.6351 19.9023 11.9134 19.8882C12.5579 19.8454 13.1921 19.7038 13.7936 19.4682C14.7377 19.1139 15.2452 18.1923 15.0568 17.175C14.9975 16.9199 14.9066 16.6733 14.7861 16.4408C14.7431 16.3484 14.6988 16.2536 14.6588 16.158C16.2235 14.998 16.4308 14.1112 15.4977 12.5556C15.9218 12.2684 16.3216 11.9151 16.4411 11.3172C16.5565 10.7402 16.3234 10.2818 15.9919 9.75877C16.2163 9.74415 16.4363 9.73128 16.652 9.71865C17.1935 9.68684 17.7046 9.65667 18.2192 9.60579L18.6689 9.56169C19.7359 9.45737 20.8392 9.34953 21.9142 9.17573C22.4323 9.09187 22.926 8.84134 23.4035 8.599L23.4296 8.58567C24.024 8.28427 24.3085 7.83596 24.2522 7.28965C24.1813 6.60134 23.8272 6.10392 23.255 5.88895C22.8226 5.74502 22.3759 5.64796 21.9227 5.59947L21.7851 5.57959C21.5619 5.55307 21.337 5.54388 21.1124 5.5521C21.0142 5.55316 20.9159 5.55433 20.8182 5.5521C20.3621 5.54345 19.906 5.53362 19.4497 5.52263C18.4041 5.49924 17.3228 5.47433 16.259 5.47058C15.435 5.46743 14.6199 5.48883 13.7561 5.51128C13.4074 5.52029 13.0533 5.52953 12.6917 5.53725L12.7625 5.44462C12.8417 5.34111 12.9028 5.26029 12.9625 5.17737C13.6631 4.19299 13.982 2.9876 13.8602 1.78555C13.7968 1.01269 13.4545 0.503451 12.8426 0.271989C12.0952 -0.0105848 11.431 0.0891807 10.8679 0.56883C10.7482 0.675399 10.6355 0.789595 10.5305 0.910702C10.4385 1.01598 10.3411 1.11643 10.2388 1.21164C10.0581 1.37362 9.87792 1.54357 9.70365 1.70801C9.25777 2.15493 8.77336 2.56169 8.25605 2.92357C7.65698 3.29792 7.03728 3.63819 6.3999 3.94275C6.05475 4.11561 5.69817 4.29444 5.3536 4.48193C4.54659 4.92158 3.68821 5.39421 2.85406 5.91479C2.51123 6.13443 2.21046 6.4136 1.96591 6.73912C0.143098 9.12824 -0.343375 11.7353 0.52025 14.4878C0.945069 15.9156 1.84903 17.1535 3.07982 17.9928ZM10.1875 5.9555C10.1861 6.25526 10.3746 6.47514 10.7055 6.55877C10.8845 6.60251 11.0683 6.62428 11.2526 6.62357C11.6716 6.62485 12.5147 6.62123 13.5817 6.61655C16.2221 6.60485 20.2122 6.58754 21.6294 6.63316C21.9659 6.64944 22.3007 6.68906 22.6317 6.75175C22.7804 6.77837 22.9213 6.83744 23.0445 6.92473C23.2309 7.05994 23.3286 7.21456 23.3197 7.36017C23.3113 7.49643 23.2115 7.62134 23.0309 7.72111C22.6538 7.93353 22.248 8.09069 21.8262 8.18778C21.2221 8.31504 20.6094 8.39686 19.993 8.43257C19.3573 8.47222 18.7094 8.49339 18.0827 8.51444C17.648 8.52859 17.1985 8.54321 16.7566 8.56392C16.0094 8.599 15.1907 8.64953 14.1799 8.72275C13.7721 8.75234 13.5337 8.93327 13.5086 9.23105C13.4749 9.62871 13.7766 9.7776 14.0191 9.89772C14.1051 9.94017 14.1921 9.98169 14.2792 10.0234C14.6241 10.1729 14.952 10.359 15.257 10.5788C15.4778 10.7518 15.5853 10.9733 15.5518 11.187C15.5176 11.4057 15.3413 11.5887 15.0693 11.6892C14.813 11.7686 14.5473 11.8132 14.2791 11.8217C14.1944 11.8284 14.1099 11.835 14.0264 11.8436C13.9309 11.8501 13.8352 11.8477 13.7403 11.8361C13.6783 11.8307 13.6162 11.8253 13.5543 11.8244H13.537C13.2433 11.8244 13.062 11.9632 13.0121 12.2268C12.9561 12.5226 13.0979 12.7374 13.4116 12.8312C13.4694 12.8485 13.5286 12.861 13.5882 12.8734C13.6647 12.8871 13.74 12.907 13.8133 12.9329C13.8895 12.9624 13.9665 12.9914 14.0435 13.0194C14.3027 13.1067 14.5538 13.2163 14.7942 13.3468C15.1802 13.5727 15.2714 13.8409 15.119 14.303C14.9562 14.797 14.6316 15.0943 14.1541 15.187C13.8735 15.234 13.5899 15.261 13.3055 15.2677L13.1497 15.2753C12.8743 15.2898 12.5315 15.3077 12.4197 15.6932C12.3083 16.0769 12.5736 16.2709 12.8309 16.4225L12.8901 16.4576C13.0902 16.5754 13.2972 16.6971 13.4874 16.8333C13.9019 17.1299 14.0555 17.4113 14.0007 17.7739C13.9411 18.1701 13.6304 18.33 13.2611 18.4843C12.355 18.8492 11.3705 18.9757 10.4016 18.852C9.32556 18.7334 8.15687 18.5645 6.72377 18.3205C5.64427 18.1197 4.62418 17.6775 3.73971 17.0268C2.8838 16.4194 2.25433 15.4947 1.86836 14.2771C1.13234 11.9535 1.52984 9.6969 3.0496 7.56988C3.19294 7.36154 3.37194 7.18015 3.57838 7.03409C4.01732 6.74006 4.59931 6.36064 5.20843 6.03398C6.0496 5.58286 6.91468 5.14859 7.77959 4.74321C9.3976 3.98473 10.6431 3.03748 11.5875 1.84707C11.721 1.68061 11.8816 1.53786 12.0626 1.42485C12.157 1.36078 12.2674 1.32434 12.3814 1.31959C12.4211 1.3195 12.4605 1.32537 12.4984 1.33702C12.5777 1.36923 12.6492 1.41807 12.708 1.48026C12.7668 1.54244 12.8116 1.61651 12.8393 1.69748C13.112 2.31819 12.9514 2.93725 12.7809 3.40789C12.3549 4.58345 11.7032 5.21012 10.7298 5.37971C10.3863 5.43819 10.1887 5.64871 10.1875 5.9555Z"
                      fill="#F4AE00"
                    />
                  </svg>
                </Button>
              </div>
            </>
          )}
        </form>
      </div>

      <Footer />
    </TFade>
  );
};

export default Profile;
